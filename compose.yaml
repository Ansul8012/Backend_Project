services:
  backend:
    container_name: backend-service
    build: ./
    ports:
      - "5500:5500"
    environment:
      PORT: 5500
      SERVER_URL: "http://localhost:5500"
      NODE_ENV: development
      DB_URI: "mongodb+srv://ansulsingh171:Anshul8012@cluster0.9drme2k.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
      JWT_SECRET: "secret"
      JWT_EXPIRES_IN: "1d"
      ARCJET_KEY: "ajkey_01jvvbpcd3fx281rrgpj18fgns"
      ARCJET_ENV: development
    develop:
      watch:
        - path: ./package.json
          action: rebuild
        - path: ./package-lock.json
          action: rebuild
        - path: ./subscription
          target: /app
          action: sync


# environment:
#       - PORT=${PORT}
#       - SERVER_URL=${SERVER_URL}
#       - NODE_ENV=${NODE_ENV}
#       - DB_URI=${DB_URI}
#       - JWT_SECRET=${JWT_SECRET}
#       - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
#       - ARCJET_KEY=${ARCJET_KEY}
#       - ARCJET_ENV=${ARCJET_ENV}


# By default, docker-compose looks for a file named .env in the same directory as your docker-compose.yml and loads environment variables from it automatically.
# You do NOT need to explicitly reference .env in the YAML file.

# Rename .env.development.local to .env (recommended for local development).
# Or, explicitly specify the env file when running docker-compose:
# docker-compose --env-file .env.development.local